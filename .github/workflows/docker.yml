name: Build and Push Docker Image

on:
  push:
    branches: [ development ]
    paths:
      - 'docker/**'
      - '.github/workflows/docker.yml'

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write  # Required to push to GHCR

    strategy:
      matrix:
        variant: [fedora, debian]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
          
      - name: Extract Perl VERSION and Git tag
        id: version
        run: |
            PERL_MODULE=$(find lib -name 'WebDyne.pm' | head -n 1)
            VERSION=$(perl -ne "print \$1 if (m{\\\$VERSION\\s*=\\s*['\"]([^'\"]+)['\"]})" "$PERL_MODULE")
            MAJOR=$(echo "$VERSION" | cut -d. -f1)
            REVISION=$(git rev-parse --short HEAD)
            BRANCH=$(git rev-parse --abbrev-ref HEAD)

            echo "VERSION: $VERSION"
            echo "MAJOR: $MAJOR"
            echo "REVISION: $REVISION"
            echo "BRANCH: $BRANCH"

            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "major=$MAJOR" >> $GITHUB_OUTPUT
            echo "revision=$REVISION" >> $GITHUB_OUTPUT
            echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Build and push Docker image (${{ matrix.variant }})
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.${{ matrix.variant }}
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ghcr.io/${{ github.repository_owner }}/webdyne:latest
            ghcr.io/${{ github.repository_owner }}/webdyne:${{ matrix.variant }}
            ghcr.io/${{ github.repository_owner }}/webdyne:${{ matrix.variant }}-${{ steps.version.outputs.version }}
            ghcr.io/${{ github.repository_owner }}/webdyne:${{ matrix.variant }}-${{ steps.version.outputs.major }}          
            ghcr.io/${{ github.repository_owner }}/webdyne:${{ matrix.variant }}-${{ steps.version.outputs.revision }}          
            ghcr.io/${{ github.repository_owner }}/webdyne:${{ matrix.variant }}-${{ steps.version.outputs.branch }}
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=PSGI web service for generating dynamic HTML pages with embedded Perl
          labels: |
            org.opencontainers.image.title=WebDyne
            org.opencontainers.image.description=PSGI web service for generating dynamic HTML pages with embedded Perl - arg label
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.licenses=Artistic-1.0-Perl OR GPL-1.0-or-later
            
      - name: Cleanup GHCR Images (keep latest 2 only)
        uses: dataaxiom/ghcr-cleanup-action@v1
        with:
          token: ${{ secrets.GHCR_PAT }}
          package: webdyne
          exclude-tags: latest
          keep-n-tagged: 2
          delete-untagged: true
          dry-run: false
          delete-ghost-images: true
