#  
# WebDyne docker image for Fedora
#
# ====
#
# Override with --build-arg
#
ARG BASE=debian:bookworm
ARG PORT=8080
ARG WORKERS=8


# Default paths
#
ARG PERL_CARTON_PATH="/opt/webdyne"
ARG DOCUMENT_ROOT="/app"


# ====
#
# Build stages
#


# Using Fedora as base
#
FROM ${BASE}


# Redeclare ARGS
#
ARG PERL_CARTON_PATH


# Install build tools and core Perl modules
#

RUN apt-get update && \
    apt-get install -y \
    build-essential \
    libssl-dev \
    libperl-dev \
    curl \
    perl \
    cpanminus \
    git \
    && rm -rf /var/lib/apt/lists/*


# Set up app
#
WORKDIR /app

#  Install Carton
#
RUN pwd
RUN which curl
RUN ls -l
#RUN cpanm --notest Carton
#RUN cpanm LWP::UserAgent
RUN /usr/bin/curl -L -o carton-1.0.35.tgz https://github.com/perl-carton/carton/archive/refs/tags/v1.0.35.tar.gz 
RUN ls -l
RUN tar -xvzf carton-1.0.35.tgz
RUN ls -l carton-1.0.35
RUN cd carton-1.0.35 && perl Makefile.PL && make install
RUN cd carton-1.0.35 && cpanm .
#RUN cpanm ./carton.tgz || (echo "Carton install failed. Dumping build.log:" && cat /root/.cpanm/work/*/build.log && exit 1)
#RUN cpanm --notest Carton || (echo "Carton install failed. Dumping build.log:" && cat /root/.cpanm/work/*/build.log && exit 1)
#RUN cpanm --notest https://github.com/perl-carton/carton/archive/refs/tags/v1.0.35.tar.gz || (echo "Carton install failed. Dumping build.log:" && cat /root/.cpanm/work/*/build.log && exit 1)


# Set up environment for local::lib
#
RUN echo "PATH ${PATH} $PATH"
ENV PERL_CARTON_PATH=${PERL_CARTON_PATH}
ENV PERL_LOCAL_LIB_ROOT=${PERL_CARTON_PATH}
ENV PERL_MB_OPT="--install_base ${PERL_CARTON_PATH}"
ENV PERL_MM_OPT="INSTALL_BASE=${PERL_CARTON_PATH}"
ENV PERL5LIB=${PERL_CARTON_PATH}/lib/perl5
ENV PATH=${PERL_CARTON_PATH}/bin:$PATH


# Set up app
#
WORKDIR /app


# Checkout Webdyne. Used if cloning
#
#RUN git clone -b development --single-branch https://github.com/aspeer/WebDyne.git pm-WebDyne
#WORKDIR pm-WebDyne


#  Otherwise copy working repo content
#
COPY . .


# And now install CPAN modules using Carton
#
WORKDIR docker.template
COPY docker/cpanfile docker/cpanfile.snapshot ./
RUN carton install --deployment


CMD []

