<?xml version="1.0" encoding="UTF-8"?>
<refentry version="5.0" xmlns="http://docbook.org/ns/docbook">
  <refmeta>
    <refentrytitle>WebDyne.pm</refentrytitle>

    <manvolnum>3pm</manvolnum>
  </refmeta>

  <refnamediv>
    <refname>WebDyne</refname>

    <refpurpose>Dynamic Perl web application framework with template
    compilation and modular design</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <title>SYNOPSIS</title>

    <programlisting language="perl">#  Basic usage
#
use WebDyne qw(html html_sr);

# Render a .psp file to HTML (returns a string)
#
my $html = html('app.psp', { param1 =&gt; 'value', param2 =&gt; 'value' });

# Render a .psp file to HTML (returns a scalar ref)
#
my $html_ref = html_sr('app.psp', { param1 =&gt; 'value', param2 =&gt; 'value' });

# With additional options
#
my $html = html('template.psp', { outfile =&gt; $fh });
    </programlisting>
  </refsynopsisdiv>

  <refsect1>
    <title>DESCRIPTION</title>

    <para><emphasis>WebDyne</emphasis> is a high-performance, dynamic Perl web
    application framework. It provides method to integrate Perl code in
    HTMLfiles with dynamic compilation, caching, and a modular architecture.
    WebDyne is designed for flexibility and performance, supporting both CGI
    and persistent environments (mod_perl, PSGI). The core interface for
    scripts is via the <function>html</function> and
    <function>html_sr</function> functions, which render .psp templates to
    HTML.</para>

    <para>WebDyne can be used directly from scripts or as a handler in
    persistent environments. It supports advanced features such as block
    rendering, custom handlers, caching, and integration with Apache via
    mod_perl and PSGI servers such as Plack and Starman.</para>

    <para>Comprehensive documentation around the construction and options
    within .psp files, and the general usage of WebDyne within an Apache or
    PSGI server are available in the doc directory of the Perl module or from
    the Github repository.</para>

    <para>The simplest representation of a .psp file that can be rendered is
    as follows. This example uses several syntactic shortcuts from brevity
    that are not standard HTML, however the output generated by WebDyne is
    alway standards compliant HTML.</para>

    <para><programlisting>&lt;start_html&gt;
The current server time is: &lt;? localtime() ?&gt;</programlisting>If this
    example is saved as the filename <filename>app.psp</filename> it can be
    rendered to HTML from the command line utility <command>wdrender</command>
    as follows:</para>

    <screen>$ wdrender app.psp
 
&lt;!DOCTYPE html&gt;&lt;html lang="en"&gt;&lt;head&gt;&lt;title&gt;Untitled Document&lt;/title&gt;&lt;meta charset="UTF-8"&gt;&lt;/head&gt;
&lt;body&gt;&lt;p&gt;The current server time is: Sat Sep 20 17:17:13 2025&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;
</screen>
  </refsect1>

  <refsect1>
    <title>METHODS</title>

    <variablelist>
      <varlistentry>
        <term>html($filename, \%options, ...)</term>

        <listitem>
          <para>Renders a .psp file to HTML and returns the result as a
          string. This is a convenience wrapper around
          <function>html_sr</function>.</para>

          <para><emphasis>Arguments:</emphasis> <itemizedlist>
              <listitem>
                <para><emphasis>$filename</emphasis> - Path to the .psp
                template file.</para>
              </listitem>

              <listitem>
                <para><emphasis>\%options</emphasis> - Hashref or hash of
                options and parameters to pass to the template.</para>
              </listitem>
            </itemizedlist></para>

          <para><emphasis>Options:</emphasis> <itemizedlist>
              <listitem>
                <para><emphasis>handler</emphasis> - Specify a custom handler
                class (defaults to WebDyne).</para>
              </listitem>

              <listitem>
                <para><emphasis>outfile</emphasis> - Filehandle to write
                output to (optional).</para>
              </listitem>
            </itemizedlist></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>html_sr($filename, \%options, ...)</term>

        <listitem>
          <para>Renders a .psp file to HTML and returns a scalar reference to
          the result. This is the core rendering function for scripts.</para>

          <para><emphasis>Arguments and options are as for
          <function>html</function>.</emphasis></para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>handler($r, \%params)</term>

        <listitem>
          <para>Main request handler for mod_perl and PSGI environments. Not
          typically used directly in scripts.</para>
        </listitem>
      </varlistentry>
    </variablelist>
  </refsect1>

  <refsect1>
    <title>OPTIONS</title>

    <para>The following options can be passed to <function>html</function> and
    <function>html_sr</function>: <variablelist>
        <varlistentry>
          <term>filename</term>

          <listitem>
            <para>application .psp filename to render (defaults to first
            argument).</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>handler</term>

          <listitem>
            <para>Custom handler class to use for rendering.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>outfile</term>

          <listitem>
            <para>Filehandle to write output to (optional). </para>
          </listitem>
        </varlistentry>
      </variablelist></para>
  </refsect1>

  <refsect1>
    <title>SEE ALSO</title>

    <para><simplelist>
        <member><ulink
        url="https://metacpan.org/pod/Plack">Plack</ulink></member>

        <member><ulink
        url="https://metacpan.org/pod/Catalyst">Catalyst</ulink></member>

        <member><ulink
        url="https://metacpan.org/pod/Dancer2">Dancer2</ulink></member>

        <member><ulink
        url="https://metacpan.org/pod/Mojolicious">Mojolicious</ulink></member>
      </simplelist></para>
  </refsect1>

  <refsect1>
    <title>AUTHOR</title>

    <para>Andrew Speer &lt;andrew.speer@isolutions.com.au&gt; and
    contributors.</para>
  </refsect1>

  <refsect1>
    <title>LICENSE</title>

    <para>This library is free software; you can redistribute it and/or modify
    it under the same terms as Perl itself. See <ulink
    url="http://dev.perl.org/licenses/">http://dev.perl.org/licenses/</ulink>.</para>
  </refsect1>
</refentry>
